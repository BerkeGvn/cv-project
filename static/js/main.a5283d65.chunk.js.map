{"version":3,"sources":["components/GeneralSection.jsx","helper.jsx","components/Contact.jsx","components/ExperienceSection.jsx","components/InfoSection.jsx","components/Skills.jsx","App.jsx","index.jsx"],"names":["GeneralSection","props","state","nameSection","value","edit","surnameSection","jobSection","makeEdit","bind","newValue","handleClickOutside","myRef","React","createRef","document","addEventListener","this","removeEventListener","event","domNode","current","contains","target","setState","section","newSection","e","className","ref","data","Component","Name","role","tabIndex","onClick","onChange","type","Surname","Job","OutsideClick","callback","useEffect","evt","code","pressEnter","Contact","info","number","email","site","adress","revealForm","submitContact","getValue","clickOutside","preventDefault","ContactInfo","ContactForm","useRef","onSubmit","action","htmlFor","Experience","addWork","experienceForm","header","subHeader","startDate","endDate","details","workExperience","company","position","addEducation","education","newExperienceForm","displayNewForm","fillNewForm","submitNewExp","editExp","rewriteExp","submitForm","deleteExp","editWork","map","val","editEdu","forEach","name","workAlreadyOnEdit","some","eduAlreadyOnEdit","prevState","newVal","newForm","newWorkArr","newExp","slice","concat","i","date","splice","workName","educationName","ExperienceDiv","job","expType","id","form","exp","ExperienceSummary","ExperienceForm","cols","rows","NewExperienceForm","required","InfoSection","summary","text","language","newItem","itemList","interest","submitSummary","changeSummary","makeSummaryEditable","editListItem","deleteListItem","returnListValue","editItemValue","addNewItem","getNewItem","newText","submit","returnValue","infoList","editItem","deleteItem","NewItems","Summary","ListItems","TextInput","Skills","newSkillValue","newSkill","skills","addNewSkill","saveNewSkillValue","addNewSkillValue","editList","SkillList","App","componentRef","trigger","content","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a5283d65.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass GeneralSection extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nameSection: {\n        value: 'Name',\n        edit: false,\n\n      },\n      surnameSection: {\n        value: 'Surname',\n        edit: false,\n      },\n      jobSection: {\n        value: 'Job Title',\n        edit: false,\n      },\n    };\n    this.makeEdit = this.makeEdit.bind(this);\n    this.newValue = this.newValue.bind(this);\n    this.handleClickOutside = this.handleClickOutside.bind(this);\n    this.myRef = React.createRef();\n  }\n\n  componentDidMount() {\n    document.addEventListener('click', this.handleClickOutside, true);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('click', this.handleClickOutside, true);\n  }\n\n  handleClickOutside(event) {\n    const domNode = this.myRef.current;\n    const { nameSection } = this.state;\n    nameSection.edit = false;\n    if (!nameSection.value) {\n      nameSection.value = 'Name';\n    }\n    const { surnameSection } = this.state;\n    if (!surnameSection.value) {\n      surnameSection.value = 'Surname';\n    }\n    surnameSection.edit = false;\n    const { jobSection } = this.state;\n    if (!jobSection.value) {\n      jobSection.value = 'Surname';\n    }\n    jobSection.edit = false;\n\n    if (!domNode || !domNode.contains(event.target)) {\n      this.setState({\n        nameSection,\n        surnameSection,\n        jobSection,\n      });\n    }\n  }\n\n  makeEdit(section) {\n    const newSection = section;\n    newSection.edit = true;\n    this.setState({\n      [section]: newSection,\n    });\n  }\n\n  newValue(e, section) {\n    const newValue = e.target.value;\n    const newSection = section;\n    newSection.value = newValue;\n    this.setState({\n      [section]: newSection,\n    });\n  }\n\n  render() {\n    const { nameSection } = this.state;\n    const { surnameSection } = this.state;\n    const { jobSection } = this.state;\n    return (\n      <div className=\"titles\" ref={this.myRef}>\n\n        <Name\n          data={nameSection}\n          makeEdit={this.makeEdit}\n          newValue={this.newValue}\n        />\n\n        <Surname\n          data={surnameSection}\n          makeEdit={this.makeEdit}\n          newValue={this.newValue}\n        />\n\n        <Job\n          data={jobSection}\n          makeEdit={this.makeEdit}\n          newValue={this.newValue}\n        />\n      </div>\n\n    );\n  }\n}\n\nconst Name = ({ data, makeEdit, newValue }) => (\n  <div role=\"menuitem\" tabIndex=\"0\" onClick={() => makeEdit(data)}>\n    {data.edit ? (\n      <input\n        className=\"titles-header-input\"\n        value={data.value}\n        onChange={(e) => {\n          newValue(e, data);\n        }}\n        type=\"text\"\n      />\n    )\n      : <h1 className=\"titles-header titles-header-name \">{data.value}</h1>}\n  </div>\n);\n\nName.propTypes = {\n  data: PropTypes.object.isRequired,\n  makeEdit: PropTypes.func.isRequired,\n  newValue: PropTypes.func.isRequired,\n};\n\nconst Surname = ({ data, makeEdit, newValue }) => (\n  <div role=\"menuitem\" tabIndex=\"0\" onClick={() => makeEdit(data)}>\n    {data.edit ? (\n      <input\n        className=\"titles-header-input\"\n        value={data.value}\n        onChange={(e) => {\n          const event = e;\n          return newValue(event, data);\n        }}\n        type=\"text\"\n      />\n    )\n      : <h1 className=\"titles-header\">{data.value}</h1>}\n  </div>\n);\n\nSurname.propTypes = {\n  data: PropTypes.object.isRequired,\n  makeEdit: PropTypes.func.isRequired,\n  newValue: PropTypes.func.isRequired,\n};\n\nconst Job = ({ data, makeEdit, newValue }) => (\n  <div role=\"menuitem\" tabIndex=\"0\" onClick={() => makeEdit(data)}>\n    {data.edit ? (\n      <input\n        className=\"titles-h2-input\"\n        value={data.value}\n        onChange={(e) => {\n          const event = e;\n          return newValue(event, data);\n        }}\n        type=\"text\"\n      />\n    )\n      : <h2 className=\"titles-h2\">{data.value}</h2>}\n  </div>\n);\n\nJob.propTypes = {\n  data: PropTypes.object.isRequired,\n  makeEdit: PropTypes.func.isRequired,\n  newValue: PropTypes.func.isRequired,\n};\n\nexport default GeneralSection;\n","import { useEffect } from 'react';\n\nfunction OutsideClick(ref, callback) {\n  useEffect(() => {\n    const handleClickOutside = (evt) => {\n      if (ref.current && !ref.current.contains(evt.target)) {\n        callback();\n      } else if (evt.code === 'Enter' || evt.code === 'NumpadEnter') {\n        callback();\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return (() => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    });\n  });\n}\n\nfunction pressEnter(callback) {\n  useEffect(() => {\n    const handleClickOutside = (evt) => {\n      if (evt.code === 'Enter' || evt.code === 'NumpadEnter') {\n        callback();\n      }\n    };\n    document.addEventListener('keydown', handleClickOutside);\n    return (() => {\n      document.removeEventListener('keydown', handleClickOutside);\n    });\n  });\n}\n\nexport { OutsideClick, pressEnter };\n","import React, { Component, useRef } from 'react';\nimport PhoneIcon from '@material-ui/icons/Phone';\nimport MailIcon from '@material-ui/icons/Mail';\nimport LanguageIcon from '@material-ui/icons/Language';\nimport HomeIcon from '@material-ui/icons/Home';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\nimport PropTypes from 'prop-types';\nimport { OutsideClick } from '../helper';\n\nclass Contact extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      info: {\n        number: '000-000-00-00',\n        email: 'email@gmail.com',\n        site: 'www.github.com',\n        adress: '123 Waterfall Jungle, WI 54880',\n      },\n      edit: false,\n    };\n    this.revealForm = this.revealForm.bind(this);\n    this.submitContact = this.submitContact.bind(this);\n    this.getValue = this.getValue.bind(this);\n    this.clickOutside = this.clickOutside.bind(this);\n  }\n\n  getValue(e, value) {\n    const newValue = e.target.value;\n    const { info } = this.state;\n    info[value] = newValue;\n    this.setState({ info });\n  }\n\n  revealForm() {\n    this.setState({ edit: true });\n  }\n\n  submitContact(e) {\n    e.preventDefault();\n    this.setState({ edit: false });\n  }\n\n  clickOutside() {\n    this.setState({ edit: false });\n  }\n\n  render() {\n    const { info } = this.state;\n    const { edit } = this.state;\n    return (\n      <div className=\"contact-info-main-div\">\n        {edit ? (\n          <ContactForm\n            clickOutside={this.clickOutside}\n            getValue={this.getValue}\n            submitContact={this.submitContact}\n          />\n        )\n          : <ContactInfo revealForm={this.revealForm} info={info} />}\n      </div>\n    );\n  }\n}\n\nconst ContactInfo = ({ info, revealForm }) => (\n  <div className=\"contact-info\" onClick={revealForm}>\n    <div className=\"contact-info-el\">\n      <PhoneIcon className=\"icon\" />\n      <p className=\"contact-info-text\">{info.number}</p>\n    </div>\n    <div className=\"contact-info-el\">\n      <MailIcon className=\"icon\" />\n      <p className=\"contact-info-text\">{info.email}</p>\n    </div>\n    <div className=\"contact-info-el\">\n      <LanguageIcon className=\"icon\" />\n      <p className=\"contact-info-text\">{info.site}</p>\n    </div>\n    <div className=\"contact-info-el\">\n      <HomeIcon className=\"icon\" />\n      <p className=\"contact-info-text\">{info.adress}</p>\n    </div>\n  </div>\n);\n\nContactInfo.propTypes = {\n  info: PropTypes.object.isRequired,\n  revealForm: PropTypes.func.isRequired,\n};\n\nconst ContactForm = ({ getValue, submitContact, clickOutside }) => {\n  const ref = useRef();\n\n  OutsideClick(ref, () => {\n    clickOutside();\n  });\n  return (\n    <div className=\"contact-info\">\n      <form ref={ref} className=\"contact-info-form\" onSubmit={submitContact} action=\"\">\n        <label className=\"contact-info-form-label\" htmlFor=\"number\">\n          <p>Phone Number</p>\n          <input onChange={(e) => getValue(e, 'number')} className=\"contact-info-form-input\" type=\"text\" />\n        </label>\n\n        <label className=\"contact-info-form-label\" htmlFor=\"email\">\n          <p>Email</p>\n          <input onChange={(e) => getValue(e, 'email')} className=\"contact-info-form-input\" type=\"email\" />\n        </label>\n\n        <label className=\"contact-info-form-label\" htmlFor=\"website\">\n          <p>Website/Media</p>\n          <input onChange={(e) => getValue(e, 'site')} className=\"contact-info-form-input\" type=\"text\" />\n        </label>\n\n        <label className=\"contact-info-form-label\" htmlFor=\"adress\">\n          <p>Adress</p>\n          <input onChange={(e) => getValue(e, 'adress')} className=\"contact-info-form-input\" type=\"text\" />\n        </label>\n\n        <button className=\"contact-info-form-button button\" type=\"submit\">\n          {' '}\n          Submit\n          <ArrowForwardIcon className=\"icon\" />\n        </button>\n      </form>\n    </div>\n  );\n};\nContactForm.propTypes = {\n  getValue: PropTypes.func.isRequired,\n  submitContact: PropTypes.func.isRequired,\n  clickOutside: PropTypes.func.isRequired,\n};\n\nexport default Contact;\n","import React, { Component, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { OutsideClick } from '../helper';\n\nclass Experience extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      addWork: false,\n      experienceForm: {\n        header: '',\n        subHeader: '',\n        startDate: '',\n        endDate: '',\n        details: '',\n        edit: false,\n      },\n      workExperience: [{\n        company: 'Gvnn Company',\n        position: 'Frontend Developer',\n        startDate: '2018',\n        endDate: '2021',\n        details: 'Lorem ipsum dolor sit amet, eu qui vidisse corrumpit mediocritatem, vim an volutpat convenire. Et doctus aliquando eos, verear nostrud.',\n        edit: false,\n      }],\n      addEducation: false,\n      education: [{\n        company: 'Lorem ipsum University',\n        position: 'Lorem ipsum  ',\n        startDate: '2018',\n        endDate: '2021',\n        details: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras faucibus, mi et tempor varius',\n        edit: false,\n      }],\n      newExperienceForm: {\n        header: '',\n        subHeader: '',\n        startDate: '',\n        endDate: '',\n        details: '',\n        edit: false,\n      },\n    };\n    this.clickOutside = this.clickOutside.bind(this);\n    this.displayNewForm = this.displayNewForm.bind(this);\n    this.fillNewForm = this.fillNewForm.bind(this);\n    this.submitNewExp = this.submitNewExp.bind(this);\n    this.editExp = this.editExp.bind(this);\n    this.rewriteExp = this.rewriteExp.bind(this);\n    this.submitForm = this.submitForm.bind(this);\n    this.deleteExp = this.deleteExp.bind(this);\n  }\n\n  clickOutside() {\n    const { workExperience, education } = this.state;\n\n    const editWork = workExperience.map((val) => ({ ...val }));\n    const editEdu = education.map((val) => ({ ...val }));\n\n    editWork.forEach((val) => (val.edit ? val.edit = false : null));\n    editEdu.forEach((val) => (val.edit ? val.edit = false : null));\n\n    this.setState({\n      addWork: false,\n      addEducation: false,\n      workExperience: editWork,\n      education: editEdu,\n    });\n  }\n\n  displayNewForm(name) {\n    const { workExperience, education } = this.state;\n    const workAlreadyOnEdit = workExperience.some(((val) => val.edit === true));\n    const eduAlreadyOnEdit = education.some(((val) => val.edit === true));\n    if (workAlreadyOnEdit || eduAlreadyOnEdit) {\n      return;\n    }\n    const state = name;\n\n    this.setState((prevState) => ({\n      [state]: !prevState[state],\n    }));\n  }\n\n  fillNewForm(e, val) {\n    const newVal = e.target.value;\n    const { newExperienceForm } = this.state;\n    const newForm = { ...newExperienceForm };\n\n    newForm[val] = newVal;\n\n    this.setState({\n      newExperienceForm: newForm,\n    });\n  }\n\n  submitNewExp(e, section, name) {\n    e.preventDefault();\n    const state = this.state[section];\n    let newWorkArr = state.map((val) => ({ ...val }));\n\n    const { newExperienceForm } = this.state;\n    const newForm = { ...newExperienceForm };\n    const newExp = {};\n    newExp.company = newForm.header;\n    newExp.position = newForm.subHeader;\n    newExp.details = newForm.details;\n    newExp.edit = false;\n    if (newForm.startDate && newForm.endDate) {\n      newExp.startDate = newForm.startDate.slice(0, 4);\n      newExp.endDate = newForm.endDate.slice(0, 4);\n    }\n\n    newWorkArr = newWorkArr.concat(newExp);\n\n    this.setState({\n      [name]: false,\n      newExperienceForm: {},\n      [section]: newWorkArr,\n    });\n  }\n\n  editExp(i, section, name) {\n    const state = name;\n    const { experienceForm, addWork, addEducation } = this.state;\n    if (addWork || addEducation) {\n      return;\n    }\n    const newForm = { ...experienceForm };\n    const editExp = section.map((val) => ({ ...val }));\n\n    editExp.forEach((val) => (val.edit ? val.edit = false : null));\n\n    newForm.header = editExp[i].company;\n    newForm.subHeader = editExp[i].position;\n    newForm.date = editExp[i].date;\n    newForm.details = editExp[i].details;\n    this.clickOutside();\n\n    editExp[i].edit = true;\n\n    this.setState({\n      experienceForm: newForm,\n      [state]: editExp,\n    });\n  }\n\n  rewriteExp(e, val) {\n    const newVal = e.target.value;\n    const { experienceForm } = this.state;\n    const newForm = { ...experienceForm };\n\n    newForm[val] = newVal;\n\n    this.setState({\n      experienceForm: newForm,\n    });\n  }\n\n  submitForm(e, i, section, name) {\n    e.preventDefault();\n    const state = name;\n    const { experienceForm } = this.state;\n    const newForm = { ...experienceForm };\n\n    const editExp = section.map((val) => ({ ...val }));\n    editExp[i].company = newForm.header;\n    editExp[i].position = newForm.subHeader;\n    editExp[i].startDate = newForm.startDate.slice(0, 4);\n    editExp[i].endDate = newForm.endDate.slice(0, 4);\n    editExp[i].details = newForm.details;\n    editExp[i].edit = false;\n\n    this.setState({\n      [state]: editExp,\n    });\n  }\n\n  deleteExp(i, section, name) {\n    const state = name;\n    const editExp = section.map((val) => ({ ...val }));\n    editExp.splice(i, 1);\n    this.setState({\n      [state]: editExp,\n    });\n  }\n\n  render() {\n    const {\n      workExperience, experienceForm, addWork, education, addEducation,\n    } = this.state;\n    return (\n      <div className=\"experience-section-divs\">\n\n        <ExperienceDiv\n          workName=\"workExperience\"\n          workExperience={workExperience}\n          educationName=\"education\"\n          education={education}\n          experienceForm={experienceForm}\n          clickOutside={this.clickOutside}\n          rewriteExp={this.rewriteExp}\n          edit={this.editExp}\n          submitForm={this.submitForm}\n          deleteExp={this.deleteExp}\n          addWork={addWork}\n          addEducation={addEducation}\n          displayNewForm={this.displayNewForm}\n          fillNewForm={this.fillNewForm}\n          submitNewExp={this.submitNewExp}\n        />\n      </div>\n    );\n  }\n}\n\nconst ExperienceDiv = ({\n  workExperience, experienceForm, clickOutside, rewriteExp,\n  edit, submitForm, workName, deleteExp, addWork, displayNewForm,\n  fillNewForm, submitNewExp, educationName, education, addEducation,\n}) => {\n  const ref = useRef();\n  OutsideClick(ref, () => {\n    clickOutside();\n  });\n\n  return (\n    <div ref={ref} className=\"experience-section-divs\">\n      <div className=\"experience-section-div experience-section-work\">\n        <h3 className=\"experience-section-header\">+ Work Experience</h3>\n        {workExperience.map((job, i) => (job.edit ? (\n          <ExperienceForm\n            key={i}\n            expType={workExperience}\n            id={i}\n            name={workName}\n            rewriteExp={rewriteExp}\n            form={experienceForm}\n            submitForm={submitForm}\n            deleteExp={deleteExp}\n          />\n        )\n          : (\n            <ExperienceSummary\n              key={i}\n              expType={workExperience}\n              id={i}\n              exp={workExperience[i]}\n              edit={edit}\n              name={workName}\n            />\n          ))) }\n        {addWork ? <NewExperienceForm fillNewForm={fillNewForm} submitNewExp={submitNewExp} section={workName} name=\"addWork\" /> : null}\n        <button\n          onClick={() => displayNewForm('addWork')}\n          className=\"experience-section-btn experience-section-work-btn button\"\n          type=\"button\"\n        >\n          {addWork ? 'Delete' : 'Add'}\n        </button>\n      </div>\n\n      <div className=\"experience-section-div experience-section-education\" ref={ref}>\n        <h3 className=\"experience-section-header\">+ Education</h3>\n        {education.map((job, i) => (job.edit ? (\n          <ExperienceForm\n            key={i}\n            expType={education}\n            id={i}\n            name={educationName}\n            rewriteExp={rewriteExp}\n            form={experienceForm}\n            submitForm={submitForm}\n            deleteExp={deleteExp}\n          />\n        )\n          : (\n            <ExperienceSummary\n              key={i}\n              expType={education}\n              id={i}\n              exp={education[i]}\n              edit={edit}\n              name={educationName}\n            />\n          ))) }\n\n        {addEducation ? <NewExperienceForm fillNewForm={fillNewForm} submitNewExp={submitNewExp} section={educationName} name=\"addEducation\" /> : null}\n        <button\n          onClick={() => displayNewForm('addEducation')}\n          className=\"experience-section-btn experience-section-education-btn button\"\n          type=\"button\"\n        >\n          {addEducation ? 'Cancel' : 'Add'}\n        </button>\n      </div>\n    </div>\n\n  );\n};\nExperienceDiv.propTypes = {\n  workExperience: PropTypes.array.isRequired,\n  experienceForm: PropTypes.object.isRequired,\n  clickOutside: PropTypes.func.isRequired,\n  rewriteExp: PropTypes.func.isRequired,\n  edit: PropTypes.func.isRequired,\n  submitForm: PropTypes.func.isRequired,\n  workName: PropTypes.string.isRequired,\n  deleteExp: PropTypes.func.isRequired,\n  addWork: PropTypes.bool.isRequired,\n  displayNewForm: PropTypes.func.isRequired,\n  fillNewForm: PropTypes.func.isRequired,\n  submitNewExp: PropTypes.func.isRequired,\n  educationName: PropTypes.string.isRequired,\n  education: PropTypes.array.isRequired,\n  addEducation: PropTypes.bool.isRequired,\n};\n\nconst ExperienceSummary = ({\n  expType, exp, id, edit, name,\n}) => (\n  <div id={id} onClick={() => edit(id, expType, name)} className=\"experience-summary\">\n    <div className=\"experience-summary-title\">\n      <p className=\"experience-summary-title-header\">{exp.company}</p>\n      <p className=\"experience-summary-date\">\n        {exp.startDate}\n        {' '}\n        -\n        {' '}\n        {exp.endDate}\n      </p>\n    </div>\n    <p className=\"experience-summary-position\">{exp.position}</p>\n    <p className=\"experience-summary-details\">{exp.details}</p>\n  </div>\n\n);\nExperienceSummary.propTypes = {\n  expType: PropTypes.array.isRequired,\n  exp: PropTypes.object.isRequired,\n  id: PropTypes.number.isRequired,\n  edit: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n\n};\n\nconst ExperienceForm = ({\n  rewriteExp, id, form, submitForm, expType, deleteExp, name,\n}) => (\n  <form onSubmit={(e) => submitForm(e, id, expType, name)} className=\"experience-summary-form\">\n\n    <label className=\"experience-summary-form-label\" htmlFor=\"name\">\n      <p className=\"experience-summary-form-text\">{name === 'workExperience' ? 'Company Name' : 'School Name'}</p>\n      <input onChange={(e) => rewriteExp(e, 'header')} value={form.header} className=\"experience-summary-form-header experience-summary-form-input\" />\n    </label>\n\n    <label className=\"experience-summary-form-label\" htmlFor=\"position\">\n      <p className=\"experience-summary-form-text\">{name === 'workExperience' ? 'Position' : 'Degree'}</p>\n      <input onChange={(e) => rewriteExp(e, 'subHeader')} value={form.subHeader} className=\"experience-summary-form-position experience-summary-form-input\" />\n    </label>\n\n    <label className=\"experience-summary-form-label experience-summary-form-date\" htmlFor=\"date\">\n      <p className=\"experience-summary-form-text\">Dates</p>\n      <input onChange={(e) => rewriteExp(e, 'startDate')} type=\"date\" className=\"experience-summary-form-date experience-summary-form-date-dt\" />\n      <input onChange={(e) => rewriteExp(e, 'endDate')} type=\"date\" className=\"experience-summary-form-date experience-summary-form-date-dt\" />\n    </label>\n\n    <label className=\"experience-summary-form-label\" htmlFor=\"Details\">\n      <p className=\"experience-summary-form-text\">Details</p>\n      <textarea onChange={(e) => rewriteExp(e, 'details')} value={form.details} className=\"experience-summary-form-details experience-summary-form-input\" cols=\"30\" rows=\"4\" />\n    </label>\n    <div className=\"experience-summary-form-buttons\">\n      <button onClick={() => deleteExp(id, expType, name)} type=\"button\" className=\"experience-summary-form-btn button\">Delete</button>\n      <button type=\"submit\" className=\"experience-summary-form-btn button\">Submit</button>\n    </div>\n\n  </form>\n);\nExperienceForm.propTypes = {\n  expType: PropTypes.array.isRequired,\n  form: PropTypes.array.isRequired,\n  id: PropTypes.number.isRequired,\n  rewriteExp: PropTypes.func.isRequired,\n  submitForm: PropTypes.func.isRequired,\n  deleteExp: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n\n};\nconst NewExperienceForm = ({\n  fillNewForm, submitNewExp, section, name,\n}) => (\n  <form onSubmit={(e) => submitNewExp(e, section, name)} className=\"experience-summary-form\">\n\n    <label className=\"experience-summary-form-label\" htmlFor=\"company name\">\n      <p className=\"experience-summary-form-text\">Company Name</p>\n      <input required onChange={(e) => fillNewForm(e, 'header')} className=\"experience-summary-form-header experience-summary-form-input\" />\n    </label>\n\n    <label className=\"experience-summary-form-label\" htmlFor=\"Position\">\n      <p className=\"experience-summary-form-text\">Position</p>\n      <input onChange={(e) => fillNewForm(e, 'subHeader')} className=\"experience-summary-form-position experience-summary-form-input\" />\n    </label>\n\n    <label className=\"experience-summary-form-label experience-summary-form-date\" htmlFor=\"date\">\n      <p className=\"experience-summary-form-text\">Dates</p>\n      <input onChange={(e) => fillNewForm(e, 'startDate')} type=\"date\" className=\"experience-summary-form-date experience-summary-form-date-dt\" />\n      <input onChange={(e) => fillNewForm(e, 'endDate')} type=\"date\" className=\"experience-summary-form-date experience-summary-form-date-dt\" />\n    </label>\n\n    <label className=\"experience-summary-form-label\" htmlFor=\"Details\">\n      <p className=\"experience-summary-form-text\">Details</p>\n      <textarea onChange={(e) => fillNewForm(e, 'details')} className=\"experience-summary-form-details experience-summary-form-input\" cols=\"30\" rows=\"4\" />\n    </label>\n    <div className=\"experience-summary-form-buttons\">\n      <button type=\"submit\" className=\"experience-summary-form-btn button\">Submit</button>\n    </div>\n\n  </form>\n);\nNewExperienceForm.propTypes = {\n\n  fillNewForm: PropTypes.func.isRequired,\n  submitNewExp: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  section: PropTypes.string.isRequired,\n\n};\n\nexport default Experience;\n","import React, { Component, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { OutsideClick, pressEnter } from '../helper';\n\nclass InfoSection extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      summary: {\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras faucibus, mi et tempor varius, neque mi accumsan augue, mollis scelerisque turpis augue vel nulla. Nullam sit amet vulputate arcu. Donec congue orci non enim finibus, nec lacinia lacus porta. In varius leo vulputate, hendrerit dui ac, pellentesque turpis.',\n        edit: false,\n      },\n      language: {\n        newItem: false,\n        details: {\n          value: '',\n          edit: false,\n        },\n        itemList: [{ value: 'English', edit: false }, { value: 'Turkish', edit: false }, { value: 'Japanese', edit: false }],\n      },\n      interest: {\n        newItem: false,\n        details: {\n          value: '',\n          edit: false,\n        },\n        itemList: [{ value: 'Cycling', edit: false }, { value: 'Reading', edit: false }, { value: 'Travel', edit: false }],\n      },\n\n    };\n    this.clickOutside = this.clickOutside.bind(this);\n    this.submitSummary = this.submitSummary.bind(this);\n    this.changeSummary = this.changeSummary.bind(this);\n    this.makeSummaryEditable = this.makeSummaryEditable.bind(this);\n    this.editListItem = this.editListItem.bind(this);\n    this.deleteListItem = this.deleteListItem.bind(this);\n    this.returnListValue = this.returnListValue.bind(this);\n    this.editItemValue = this.editItemValue.bind(this);\n    this.addNewItem = this.addNewItem.bind(this);\n    this.getNewItem = this.getNewItem.bind(this);\n  }\n\n  clickOutside(section) {\n    const newSection = section;\n    newSection.edit = false;\n    this.setState({\n      [section]: newSection,\n    });\n  }\n\n  makeSummaryEditable() {\n    const { summary } = this.state;\n    summary.edit = true;\n    this.setState({ summary });\n  }\n\n  changeSummary(e) {\n    const newValue = e.target.value;\n    const { summary } = this.state;\n    summary.text = newValue;\n    this.setState({ summary });\n  }\n\n  submitSummary(e) {\n    if (e) {\n      e.preventDefault();\n    }\n    const { summary } = this.state;\n    summary.edit = false;\n    this.setState({ summary });\n  }\n\n  addNewItem(section) {\n    const newSection = section;\n    const { newItem, details, itemList } = newSection;\n    if (newItem === false) {\n      newSection.newItem = true;\n      this.setState({\n        [section]: newSection,\n      });\n    } else {\n      if (!details.value) {\n        newSection.newItem = false;\n        this.setState({\n          [section]: newSection,\n        });\n        return;\n      }\n\n      newSection.itemList = itemList.map((i) => ({ ...i }));\n      newSection.itemList = newSection.itemList.concat(details);\n      newSection.details = { ...section.details };\n      newSection.newItem = false;\n      newSection.details.value = '';\n\n      this.setState({\n        [section]: newSection,\n      });\n    }\n  }\n\n  getNewItem(e, section) {\n    const newValue = e.target.value;\n    const newSection = section;\n    newSection.details.value = newValue;\n    newSection.details.edit = false;\n\n    this.setState({\n      [section]: newSection,\n    });\n  }\n\n  editItemValue(e, id, section) {\n    const newValue = e.target.value;\n    const newSection = section;\n    const { itemList } = newSection;\n\n    newSection.itemList = itemList.map((i) => ({ ...i }));\n\n    newSection.itemList[id].value = newValue;\n    this.setState((prevState) => ({\n      [section]: prevState[section],\n\n    }), () => this.setState({\n      [section]: newSection,\n    }));\n  }\n\n  deleteListItem(id, section) {\n    const newSection = section;\n    const { itemList } = newSection;\n\n    newSection.itemList = itemList.map((i) => ({ ...i }));\n    newSection.itemList.splice(id, 1);\n\n    this.setState((prevState) => ({\n      [section]: prevState[section],\n\n    }), () => this.setState({\n      [section]: newSection,\n    }));\n  }\n\n  editListItem(id, section) {\n    const newSection = section;\n    const { itemList, newItem } = newSection;\n    if (newItem) {\n      return;\n    }\n\n    newSection.itemList = itemList.map((i) => ({ ...i }));\n\n    newSection.itemList.forEach((val) => {\n      if (val.edit === true) {\n        val.edit = false;\n      }\n    });\n    if (newSection.itemList[id]) {\n      newSection.itemList[id].edit = true;\n    }\n\n    this.setState({\n      [section]: newSection,\n    });\n  }\n\n  returnListValue(section) {\n    const newSection = section;\n    const { itemList } = newSection;\n    newSection.itemList = itemList.map((i) => ({ ...i }));\n    newSection.itemList.forEach((val) => {\n      if (val.edit === true) {\n        val.edit = false;\n      }\n    });\n    if (newSection.newItem) {\n      newSection.newItem = false;\n    }\n    this.setState({\n      [section]: newSection,\n    });\n  }\n\n  render() {\n    const { summary, language, interest } = this.state;\n    const { text, edit } = summary;\n    return (\n      <div className=\"info-section-divs\">\n        <div className=\"info-section-element\">\n          <h3 className=\"info-section-element-header\">Summary</h3>\n          {edit ? (\n            <Summary\n              clickOutside={this.clickOutside}\n              summary={summary}\n              newText={this.changeSummary}\n              submit={this.submitSummary}\n            />\n          )\n            : (<p onClick={this.makeSummaryEditable}>{text}</p>)}\n        </div>\n\n        <div className=\"info-section-element info-section-language-section\">\n          <h3 className=\"info-section-element-header\">Languages</h3>\n          <ListItems\n            returnValue={this.returnListValue}\n            infoList={language}\n            editItem={this.editListItem}\n            deleteItem={this.deleteListItem}\n            editItemValue={this.editItemValue}\n            addNewItem={this.addNewItem}\n            getNewItem={this.getNewItem}\n          />\n        </div>\n\n        <div className=\"info-section-element\">\n          <h3 className=\"info-section-element-header\">Interests</h3>\n          <ListItems\n            returnValue={this.returnListValue}\n            infoList={interest}\n            editItem={this.editListItem}\n            deleteItem={this.deleteListItem}\n            editItemValue={this.editItemValue}\n            addNewItem={this.addNewItem}\n            getNewItem={this.getNewItem}\n          />\n\n        </div>\n\n      </div>\n    );\n  }\n}\n\nconst NewItems = ({ infoList, addNewItem, getNewItem }) => (\n  <div>\n    {infoList.newItem ? <input onChange={(e) => getNewItem(e, infoList)} className=\"info-section-list-input\" type=\"text\" /> : null}\n    <button onClick={() => addNewItem(infoList)} type=\"button\" className=\"button info-section-btn\">Add</button>\n  </div>\n);\nNewItems.propTypes = {\n  infoList: PropTypes.object.isRequired,\n  addNewItem: PropTypes.func.isRequired,\n  getNewItem: PropTypes.func.isRequired,\n};\n\nconst Summary = ({\n  summary, newText, clickOutside, submit,\n}) => {\n  const ref = useRef();\n\n  OutsideClick(ref, () => {\n    clickOutside(summary);\n  });\n  pressEnter(() => {\n    submit();\n  });\n  return (\n    <form className=\"info-section-summary-form\" ref={ref} onSubmit={submit} action=\"\">\n      <textarea className=\"info-section-summary-form-textarea\" value={summary.text} onChange={newText} name=\"\" id=\"123\" cols=\"18\" rows=\"10\" />\n      <button className=\"info-section-summary-form-btn button\" type=\"submit\">Submit</button>\n    </form>\n\n  );\n};\nSummary.propTypes = {\n  summary: PropTypes.object.isRequired,\n  newText: PropTypes.func.isRequired,\n  clickOutside: PropTypes.func.isRequired,\n  submit: PropTypes.func.isRequired,\n};\n\nconst ListItems = ({\n  infoList, editItem, deleteItem, returnValue, editItemValue, addNewItem,\n  getNewItem,\n}) => {\n  const ref = useRef();\n\n  OutsideClick(ref, () => {\n    returnValue(infoList);\n  });\n  pressEnter(() => {\n    infoList.newItem ? addNewItem(infoList) : returnValue(infoList);\n  });\n  return (\n    <div ref={ref}>\n      <ul>\n        {\n    infoList.itemList.map((val, i) => (\n      <li className=\"info-section-list\" onClick={() => { editItem(i, infoList); }} key={i}>\n        {\n        val.edit ? (\n          <TextInput\n            infoList={infoList}\n            deleteItem={deleteItem}\n            id={i}\n            returnValue={returnValue}\n            editItemValue={editItemValue}\n          />\n        )\n          : (\n            <p className=\"info-section-list-text\" id={i}>\n              -\n              {' '}\n              {val.value}\n            </p>\n          )\n        }\n      </li>\n    ))\n    }\n      </ul>\n      <NewItems infoList={infoList} addNewItem={addNewItem} getNewItem={getNewItem} />\n    </div>\n\n  );\n};\nListItems.propTypes = {\n  infoList: PropTypes.object.isRequired,\n  editItem: PropTypes.func.isRequired,\n  returnValue: PropTypes.func.isRequired,\n  deleteItem: PropTypes.func.isRequired,\n  editItemValue: PropTypes.func.isRequired,\n  addNewItem: PropTypes.func.isRequired,\n  getNewItem: PropTypes.func.isRequired,\n};\n\nconst TextInput = ({\n  id, deleteItem, infoList, editItemValue,\n}) => (\n  <label htmlFor=\" \">\n    <input onChange={(e) => editItemValue(e, id, infoList)} value={infoList.itemList[id].value} className=\"info-section-list-input\" type=\"text\" />\n    <div className=\"info-section-list-buttons\">\n      {' '}\n      <button onClick={() => deleteItem(id, infoList)} className=\"button info-section-list-buttons-btn\" type=\"submit\">Delete</button>\n    </div>\n\n  </label>\n);\nTextInput.propTypes = {\n  id: PropTypes.number.isRequired,\n  infoList: PropTypes.object.isRequired,\n  deleteItem: PropTypes.func.isRequired,\n  editItemValue: PropTypes.func.isRequired,\n};\nexport default InfoSection;\n","/* eslint-disable no-param-reassign */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\n\nimport React, { Component, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { OutsideClick, pressEnter } from '../helper';\n\nclass Skills extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newSkillValue: '',\n      newSkill: false,\n      skills: [{ value: 'Lorem ipsum', edit: false }, { value: 'Dolor sit', edit: false }, { value: 'consectetur adipiscing', edit: false }, { value: 'eiusmod', edit: false }],\n    };\n    this.clickOutside = this.clickOutside.bind(this);\n    this.editItem = this.editItem.bind(this);\n    this.deleteItem = this.deleteItem.bind(this);\n    this.editItemValue = this.editItemValue.bind(this);\n    this.addNewSkill = this.addNewSkill.bind(this);\n    this.saveNewSkillValue = this.saveNewSkillValue.bind(this);\n    this.addNewSkillValue = this.addNewSkillValue.bind(this);\n  }\n\n  clickOutside() {\n    const { skills } = this.state;\n    const editList = skills.map((val) => ({ ...val }));\n\n    editList.forEach((val) => {\n      if (val.edit === true) {\n        val.edit = false;\n      }\n    });\n\n    this.setState({\n      skills: editList,\n      newSkillValue: '',\n      newSkill: false,\n    });\n  }\n\n  editItem(i) {\n    const { skills, newSkill } = this.state;\n    if (newSkill) {\n      return;\n    }\n    const editList = skills.map((val) => ({ ...val }));\n    editList.forEach((val) => {\n      if (val.edit === true) {\n        val.edit = false;\n      }\n    });\n    editList[i].edit = true;\n\n    this.setState({ skills: editList });\n  }\n\n  editItemValue(e, i) {\n    const newValue = e.target.value;\n    const { skills } = this.state;\n    const editList = skills.map((val) => ({ ...val }));\n    editList[i].value = newValue;\n\n    this.setState({ skills: editList });\n  }\n\n  deleteItem(i) {\n    const { skills } = this.state;\n    const editList = skills.map((val) => ({ ...val }));\n    editList.splice(i, 1);\n    this.setState((prevState) => ({\n      skills: prevState.skills,\n\n    }), () => this.setState({\n      skills: editList,\n    }));\n  }\n\n  addNewSkill() {\n    const { skills } = this.state;\n    const alreadyOnEdit = skills.some(((val) => val.edit === true));\n    if (alreadyOnEdit) {\n      return;\n    }\n    this.setState((prevState) => ({ newSkill: !prevState.newSkill }));\n  }\n\n  saveNewSkillValue(e) {\n    const newValue = e.target.value;\n    this.setState({ newSkillValue: newValue });\n  }\n\n  addNewSkillValue() {\n    const newSkill = {};\n    const { skills, newSkillValue } = this.state;\n    if (!newSkillValue) {\n      return;\n    }\n    newSkill.value = newSkillValue;\n    newSkill.edit = false;\n\n    let editList = skills.map((val) => ({ ...val }));\n    editList = editList.concat(newSkill);\n    this.setState({\n      skills: editList,\n      newSkillValue: '',\n      newSkill: false,\n\n    });\n  }\n\n  render() {\n    const { skills, newSkill } = this.state;\n    return (\n      <div className=\"experience-section-div skills-section\">\n        <h3 className=\"experience-section-header\">+ Skills</h3>\n        <SkillList\n          skills={skills}\n          editItem={this.editItem}\n          clickOutside={this.clickOutside}\n          editItemValue={this.editItemValue}\n          deleteItem={this.deleteItem}\n          newSkill={newSkill}\n          addNewSkill={this.addNewSkill}\n          addNewSkillValue={this.addNewSkillValue}\n          saveNewSkillValue={this.saveNewSkillValue}\n\n        />\n\n      </div>\n    );\n  }\n}\n\nconst SkillList = ({\n  skills, editItem, clickOutside, editItemValue,\n  deleteItem, newSkill, addNewSkillValue, saveNewSkillValue, addNewSkill,\n}) => {\n  const ref = useRef();\n  OutsideClick(ref, () => {\n    clickOutside();\n  });\n\n  pressEnter(() => {\n    addNewSkillValue();\n    clickOutside();\n  });\n\n  return (\n    <div ref={ref}>\n      <ul className=\"skills-section-ul\">\n        {skills.map((val, i) => (\n          <li className=\"skills-section-list\" onClick={() => editItem(i)} key={i}>\n            {val.edit\n              ? (\n                <label htmlFor=\"newText\">\n                  {' '}\n                  <input\n                    className=\"skills-section-input\"\n                    value={val.value}\n                    onChange={(e) => editItemValue(e, i)}\n                  />\n                  <button onClick={() => deleteItem(i)} type=\"button\" className=\"skills-section-delete-btn button\">Delete</button>\n                </label>\n\n              )\n              : (\n                <p className=\"skills-section-text\">\n                  -\n                  {' '}\n                  {val.value}\n                </p>\n              ) }\n          </li>\n        ))}\n        {newSkill ? (\n          <label htmlFor=\"newitem\">\n            <input onChange={(e) => saveNewSkillValue(e)} className=\"skills-section-input\" />\n            <button onClick={addNewSkillValue} type=\"button\" className=\"skills-section-delete-btn button\">Add</button>\n          </label>\n        ) : null}\n\n      </ul>\n      <button onClick={addNewSkill} type=\"button\" className=\"skills-section-add-btn button\">{newSkill ? 'Cancel' : 'Add'}</button>\n    </div>\n\n  );\n};\nSkillList.propTypes = {\n  skills: PropTypes.array.isRequired,\n  editItem: PropTypes.func.isRequired,\n  clickOutside: PropTypes.func.isRequired,\n  editItemValue: PropTypes.func.isRequired,\n  deleteItem: PropTypes.func.isRequired,\n  newSkill: PropTypes.bool.isRequired,\n  addNewSkillValue: PropTypes.func.isRequired,\n  addNewSkill: PropTypes.func.isRequired,\n  saveNewSkillValue: PropTypes.func.isRequired,\n};\n\nexport default Skills;\n","import React, { useRef } from 'react';\nimport './scss/main.scss';\nimport ReactToPrint from 'react-to-print';\nimport GeneralSection from './components/GeneralSection';\nimport Contact from './components/Contact';\nimport Experience from './components/ExperienceSection';\nimport InfoSection from './components/InfoSection';\nimport Skills from './components/Skills';\n\nconst App = () => {\n  const componentRef = useRef();\n\n  return (\n    <div>\n      <ReactToPrint\n        trigger={() => <button className=\"print-button button\" type=\"button\">PDF / Print</button>}\n        content={() => componentRef.current}\n      />\n      <div id=\"divToPrint\" ref={componentRef} className=\"paper\">\n        <div className=\"general-section\">\n          <GeneralSection />\n          <Contact />\n        </div>\n        <div className=\"info-experience-section\">\n          <div className=\"info-section\">\n            <InfoSection />\n          </div>\n          <div className=\"experience-section\">\n            <Experience />\n            <Skills />\n          </div>\n        </div>\n      </div>\n    </div>\n\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}